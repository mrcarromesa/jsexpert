!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AbstractDecoder	format/abstract-decoder.js	/^class AbstractDecoder extends stream.Transform {$/;"	C
AbstractEncoder	format/abstract-encoder.js	/^class AbstractEncoder extends stream.Transform {$/;"	C
Alert	visualizer/alert.js	/^class Alert extends EventEmitter {$/;"	C
Analysis	analysis/index.js	/^class Analysis extends stream.Readable {$/;"	C
Categories	visualizer/categories.js	/^class Categories {$/;"	C
CategoryContent	visualizer/categories.js	/^class CategoryContent {$/;"	C
ClinicDoctor	index.js	/^class ClinicDoctor extends events.EventEmitter {$/;"	C
CollectAndRead	test/collect-and-read.js	/^class CollectAndRead extends events.EventEmitter {$/;"	C
Data	visualizer/data.js	/^class Data {$/;"	C
Destroyable	lib/destroyable-stream.js	/^  class Destroyable extends Class {$/;"	C
FRAME_PREFIX_SIZE	format/abstract-decoder.js	/^const FRAME_PREFIX_SIZE = 2 \/\/ uint16 is 2 bytes$/;"	V
FRAME_PREFIX_SIZE	format/abstract-encoder.js	/^const FRAME_PREFIX_SIZE = 2 \/\/ uint16 is 2 bytes$/;"	V
Graph	visualizer/graph.js	/^class Graph extends EventEmitter {$/;"	C
HHM_SEED	analysis/analyse-cpu.js	/^const HHM_SEED = 0xa74b9cbd4047b4bbe79f365a9f247886ac0a8a9c23ef8c5c45d98badb8$/;"	V
HoverBox	visualizer/hover-box.js	/^class HoverBox {$/;"	C
Icon	visualizer/icons.js	/^class Icon {$/;"	C
Icons	visualizer/icons.js	/^class Icons {$/;"	C
Issue	visualizer/alert.js	/^class Issue {$/;"	C
Menu	visualizer/menu.js	/^class Menu extends EventEmitter {$/;"	C
OnlineMeanVariance	analysis/guess-interval.js	/^class OnlineMeanVariance {$/;"	C
ProcessStat	collect/process-stat.js	/^class ProcessStat {$/;"	C
ProcessStatDecoder	format/process-stat-decoder.js	/^class ProcessStatDecoder extends AbstractDecoder {$/;"	C
ProcessStatEncoder	format/process-stat-encoder.js	/^class ProcessStatEncoder extends AbstractEncoder {$/;"	C
ProcessStatToCSV	debug/process-stat-to-csv.js	/^class ProcessStatToCSV extends stream.Transform {$/;"	C
Recomendation	visualizer/recommendation.js	/^class Recomendation extends EventEmitter {$/;"	C
RecomendationWrapper	visualizer/recommendation.js	/^class RecomendationWrapper {$/;"	C
Recommendation	recommendations/index.js	/^class Recommendation {$/;"	C
RenderRecommendations	recommendations/index.js	/^class RenderRecommendations extends stream.Readable {$/;"	C
SEPARATION_THRESHOLD	analysis/analyse-cpu.js	/^const SEPARATION_THRESHOLD = 1$/;"	V
SubGraph	visualizer/sub-graph.js	/^class SubGraph extends EventEmitter {$/;"	C
SystemInfo	format/system-info-decoder.js	/^class SystemInfo {$/;"	C
SystemInfoDecoder	format/system-info-decoder.js	/^class SystemInfoDecoder extends stream.Transform {$/;"	C
TODO	test/cmd-collect-exit.test.js	/^\/\/ TODO: test Windows SIGKILL behaviour, if it should error, find reliable detection$/;"	T
TraceEventDecoder	format/trace-event-decoder.js	/^class TraceEventDecoder extends stream.Transform {$/;"	C
TraceEventToCSV	debug/trace-event-to-csv.js	/^class TraceEventToCSV extends stream.Transform {$/;"	C
aggregateMemoryIssue	analysis/issue-category.js	/^function aggregateMemoryIssue (memory) {$/;"	F
analyseCPU	analysis/analyse-cpu.js	/^async function analyseCPU (systemInfo, processStatSubset, traceEventSubset) {$/;"	F
analyseCPU	analysis/index.js	/^  analyseCPU(systemInfo, processStatSubset, traceEventSubset, function (err, cpuIssue) {$/;"	M
analyseData	analysis/index.js	/^function analyseData ({ systemInfo, traceEvent, processStat }, callback) {$/;"	F
analyseDelay	analysis/analyse-delay.js	/^function analyseDelay (systemInfo, processStatSubset, traceEventSubset) {$/;"	F
analyseHandles	analysis/analyse-handles.js	/^function analyseHandles (systemInfo, processStatSubset, traceEventSubset) {$/;"	F
analyseLoopUtilisation	analysis/analyse-loop-utilization.js	/^function analyseLoopUtilisation (systemInfo, processStatSubset, traceEventSubset) {$/;"	F
analyseMemory	analysis/analyse-memory.js	/^function analyseMemory (systemInfo, processStatSubset, traceEventSubset) {$/;"	F
analysisResult	test/analysis.test.js	/^  const analysisResult = new Analysis(systenInfoReader, traceEventReader, processStatReader)$/;"	V
args	format/trace-event-decoder.js	/^    traceEvent.args = {$/;"	P
args	test/analysis-memory.test.js	/^      args: { startTimestamp: 0, endTimestamp: 50 }$/;"	P
args	test/analysis-memory.test.js	/^      args: { startTimestamp: 300, endTimestamp: 350 }$/;"	P
args	test/analysis-memory.test.js	/^      args: { startTimestamp: 350, endTimestamp: 360 }$/;"	P
args	test/analysis-memory.test.js	/^      args: { startTimestamp: 360, endTimestamp: 370 }$/;"	P
args	test/format-trace-event.test.js	/^        args: {$/;"	P
args	test/generate-trace-event.js	/^        args: {$/;"	P
arrayBuffers	test/format-process-stat.test.js	/^        arrayBuffers: 0,$/;"	P
atol	analysis/guess-interval.js	/^const atol = 1e-9$/;"	V
attr	test/recommendation.test.js	/^        attr: {$/;"	P
basedir	index.js	/^      basedir: __dirname,$/;"	P
bestLeftIndex	analysis/guess-interval.js	/^  let bestLeftIndex = 0 \/\/ corresponds to slice(0, leftIndex)$/;"	V
binomial	analysis/analyse-handles.js	/^  const binomial = new distributions.Binomial(0.5, noise.length)$/;"	V
blockingEventsNewSpace	analysis/analyse-memory.js	/^  const blockingEventsNewSpace = new Set(['V8.GCScavenger'])$/;"	V
blockingEventsOldSpace	analysis/analyse-memory.js	/^  const blockingEventsOldSpace = new Set([$/;"	V
bonferroni	analysis/analyse-handles.js	/^  const bonferroni = 2 * (handleStat.mean() - median)$/;"	V
bonferroniVariance	analysis/analyse-handles.js	/^  const bonferroniVariance = 4 * handleStat.variance() +$/;"	V
bootstrapStylePandocTables	docs/cpu-model-dev/model.html	/^function bootstrapStylePandocTables() {$/;"	f
bootstrapStylePandocTables	docs/handles-model-dev/model.html	/^function bootstrapStylePandocTables() {$/;"	f
bootstrapStylePandocTables	docs/memory-model-dev/model.html	/^function bootstrapStylePandocTables() {$/;"	f
buf	test/cmd-collect-detect-port.test.js	/^      const buf = []$/;"	A
buildTabset	docs/cpu-model-dev/model.html	/^  function buildTabset(tabset) {$/;"	f
buildTabset	docs/handles-model-dev/model.html	/^  function buildTabset(tabset) {$/;"	f
buildTabset	docs/memory-model-dev/model.html	/^  function buildTabset(tabset) {$/;"	f
c	analysis/analyse-handles.js	/^  const c = 0.5 \/\/ Distribution dependent constant, 0.5 is the best value for unknown distribution$/;"	V
categories	test/recommendation.test.js	/^    const categories = new Set()$/;"	V
categories	visualizer/categories.js	/^    const categories = new Map()$/;"	V
category	analysis/issue-category.js	/^  let category = 'unknown'$/;"	V
changes	analysis/analyse-handles.js	/^  const changes = []$/;"	A
checkPriorTraceLogs	index.js	/^function checkPriorTraceLogs () {$/;"	F
cleanup	test/cmd-collect-analysing.test.js	/^  function cleanup (err, dirname) {$/;"	F
cleanup	test/cmd-visualize.test.js	/^  function cleanup (err, dirname) {$/;"	F
clock	collect/system-info.js	/^    clock: {$/;"	P
clock	test/analysis.test.js	/^    clock: {$/;"	P
clock	test/format-system-info.test.js	/^      clock: {$/;"	P
clock	test/format-system-info.test.js	/^    clock: {$/;"	P
clock	test/format-trace-event.test.js	/^    clock: {$/;"	P
closestIndexByBinarySearch	visualizer/data.js	/^function closestIndexByBinarySearch (array, searchValue) {$/;"	F
cmd	test/cmd-collect-detect-port.test.js	/^  const cmd = new CollectAndRead({ detectPort: true }, '-e', `$/;"	V
cmd	test/cmd-collect-exit-sigint.script.js	/^const cmd = new CollectAndRead({}, '-e', `$/;"	V
cmd	test/cmd-collect-exit.test.js	/^  const cmd = new CollectAndRead($/;"	V
cmd	test/cmd-collect-exit.test.js	/^  const cmd = new CollectAndRead({}, '--expose-gc', '-e', 'process.nextTick(() => { process.exit(1) })')$/;"	F
cmd	test/cmd-collect-exit.test.js	/^  const cmd = new CollectAndRead({}, '--expose-gc', '-e', 'process.nextTick(() => { process.exit(1) })')$/;"	V
cmd	test/cmd-collect-node-options-env.script.js	/^const cmd = new CollectAndRead({}, '-p', 'Error.stackTraceLimit')$/;"	V
cmd	test/cmd-collect-node-path-env.script.js	/^const cmd = new CollectAndRead({}, '-e', 'require("cmd-collect-node-path-env.child")')$/;"	V
cmd	test/cmd-collect-sample-interval.test.js	/^  const cmd = new CollectAndRead({$/;"	V
cmd	test/cmd-collect.test.js	/^  const cmd = new CollectAndRead({$/;"	V
cmd	test/cmd-collect.test.js	/^  const cmd = new CollectAndRead({}, '--expose-gc', '-e', `$/;"	V
cmd	test/cmd-collect.test.js	/^  const cmd = new CollectAndRead({}, '-e', `$/;"	V
cmds	test/cmd-collect-detect-port.test.js	/^const cmds = []$/;"	A
collectData	analysis/index.js	/^function collectData (systemInfoReader, traceEventReader, processStatReader, callback) {$/;"	F
commonSd	analysis/analyse-cpu.js	/^  const commonSd = 2 * (summary0.sd() + summary1.sd())$/;"	V
cpu	analysis/analyse-cpu.js	/^  const cpu = processStatSubset.map((d) => d.cpu)$/;"	F
cpu	analysis/index.js	/^      cpu: cpuIssue,$/;"	P
cpu	test/analysis-cpu.test.js	/^      cpu: [$/;"	P
cpu	test/analysis-cpu.test.js	/^      cpu: [100, 100, 120, 100, 110, 100, 100, 110, 90, 110]$/;"	P
cpu	test/analysis-cpu.test.js	/^      cpu: [100, 100, 120]$/;"	P
cpu	test/analysis-cpu.test.js	/^      cpu: [200, 200, 100, 90, 190, 200, 80, 110, 190, 0]$/;"	P
cpu	test/analysis-cpu.test.js	/^      cpu: [200, 200, 100, 90, 190, 200, 80, 110, 190, 200]$/;"	P
cpu	test/analysis-cpu.test.js	/^      cpu: [200, 200, 15, 10, 190, 200, 5, 15, 190, 200]$/;"	P
cpu	test/analysis-cpu.test.js	/^      cpu: [50, 40, 10, 10, 200, 50, 40, 10, 10, 30, 10]$/;"	P
cpu	test/analysis-cpu.test.js	/^      cpu: [50, 40, 10, 10, 80, 50, 40, 1, 10, 30, 10]$/;"	P
cpu	test/analysis-cpu.test.js	/^      cpu: [50, 40, 10]$/;"	P
cpu	test/analysis.test.js	/^      cpu: [1, 1, 1, 100, 100, 120, 90, 110, 100, 80, 110, 90, 110, 1, 1, 1]$/;"	P
cpu	test/analysis.test.js	/^      cpu: [1, 1, 1, 50, 40, 10, 10, 100, 50, 40, 10, 10, 10, 1, 1, 1]$/;"	P
cpu	test/analysis.test.js	/^    cpu: [100, 100, 120, 90, 110, 100, 80, 110, 90, 110]$/;"	P
cpu	test/analysis.test.js	/^    cpu: [50, 40, 10, 10, 100, 50, 40, 10, 10, 10]$/;"	P
customEnv	index.js	/^    const customEnv = {$/;"	O
cwd	test/cmd-collect-exit.test.js	/^      cwd: __dirname$/;"	P
cwd	test/cmd-collect-node-options-env.test.js	/^      cwd: __dirname$/;"	P
data	analysis/analyse-cpu.js	/^  const data = tf.tidy(() => tf.reshape(tf.tensor1d(cpu), [1, cpu.length, 1]))$/;"	F
data	index.js	/^      data: dataFile,$/;"	P
data	test/format-trace-event.test.js	/^  const data = [$/;"	A
data	test/recommendation.test.js	/^        data: {$/;"	P
decoder	test/format-process-stat.test.js	/^  const decoder = new ProcessStatDecoder()$/;"	V
decoder	test/format-trace-event.test.js	/^  const decoder = new TraceEventDecoder(systemInfoReader)$/;"	V
delay	test/analysis-delay.test.js	/^      delay: [1, 2, 1, 1, 2, 2, 3, 1]$/;"	P
delay	test/analysis-delay.test.js	/^      delay: [10, 8, 6, 10, 15, 10, 4]$/;"	P
delay	test/analysis-delay.test.js	/^    delay: [1, 2, 1, 110, 2, 2, 3, 1]$/;"	P
delay	test/analysis-delay.test.js	/^    delay: [1, 2, 1, 20, 2, 2, 3, 1]$/;"	P
delay	test/cmd-collect.test.js	/^      const delay = output.processStat.map((stat) => stat.delay)$/;"	F
deltams	test/cmd-collect.test.js	/^    function deltams (now) {$/;"	F
diff	analysis/analyse-handles.js	/^function diff (vec) {$/;"	F
diff	test/cmd-collect-sample-interval.test.js	/^function diff (data) {$/;"	F
diff	test/cmd-collect.test.js	/^function diff (data) {$/;"	F
dimensions	analysis/analyse-cpu.js	/^    dimensions: 1$/;"	P
doctor	test/cmd-no-cluster.script.js	/^const doctor = new ClinicDoctor()$/;"	V
doctor	test/cmd-no-cluster.test.js	/^  const doctor = new ClinicDoctor({})$/;"	V
drawUi	visualizer/main.js	/^const drawUi = () => {$/;"	F
dur	test/analysis-memory.test.js	/^      dur: 10000,$/;"	P
dur	test/analysis-memory.test.js	/^      dur: 50000,$/;"	P
dur	test/format-trace-event.test.js	/^        dur: 1000,$/;"	P
dur	test/format-trace-event.test.js	/^        dur: 50,$/;"	P
dur	test/format-trace-event.test.js	/^        dur: 500,$/;"	P
dur	test/generate-trace-event.js	/^        dur: (endTimestamp - startTimestamp) * 1e3,$/;"	M
elapsedCpuUsageTotal	collect/process-stat.js	/^    const elapsedCpuUsageTotal = ($/;"	F
encoder	test/format-process-stat.test.js	/^  const encoder = new ProcessStatEncoder()$/;"	V
endTimestamp	format/trace-event-decoder.js	/^      endTimestamp: (endtime * 1e-3) + this.clockOffset$/;"	M
endTimestamp	test/generate-trace-event.js	/^          endTimestamp: endTimestamp$/;"	P
endTimestamp	test/generate-trace-event.js	/^  let endTimestamp = 0$/;"	V
env	index.js	/^      env: { NODE_CLINIC_DOCTOR_COLLECT_LOOP_UTILIZATION: this.collectLoopUtilization }$/;"	P
error	test/analysis.test.js	/^  const error = new Error('expected error')$/;"	V
error	test/lib-destroyable-stream.test.js	/^    const error = new Error('error')$/;"	V
excludeTrailingPunctuationFromURLs	recommendations/index.js	/^  excludeTrailingPunctuationFromURLs: true,$/;"	P
exports	debug/visualize-mod.js	/^module.exports = {$/;"	P
extend	lib/destroyable-stream.js	/^function extend (Class) {$/;"	F
external	test/cmd-visualize.test.js	/^      external: 0$/;"	P
favicon	index.js	/^      favicon: clinicFaviconBase64,$/;"	P
files	recommendations/index.js	/^    const files = []$/;"	A
flat	test/generate-process-stat.js	/^  const flat = {$/;"	O
generateProcessStat	test/generate-process-stat.js	/^function generateProcessStat (data, noiseLevel, timeStretching) {$/;"	F
generateTraceEvent	test/generate-trace-event.js	/^function generateTraceEvent (chars, timeStretching) {$/;"	F
getAnalysis	test/analysis.test.js	/^function getAnalysis (processStatData, traceEventData) {$/;"	F
getTextNodeBoundingRect	visualizer/alert.js	/^function getTextNodeBoundingRect (textNode) {$/;"	F
ghCodeBlocks	recommendations/index.js	/^  ghCodeBlocks: true,$/;"	P
graph	visualizer/main.js	/^  const graph = new Graph({ collectLoopUtilization: process.env.NODE_CLINIC_DOCTOR_COLLECT_LOOP_UTILIZATION })$/;"	V
group	analysis/analyse-cpu.js	/^  const group = [[], []]$/;"	A
guessInterval	analysis/guess-interval.js	/^function guessInterval (data) {$/;"	F
handles	analysis/analyse-handles.js	/^  const handles = processStatSubset.map((d) => d.handles)$/;"	F
handles	analysis/guess-interval.js	/^  const handles = data.map((d) => d.handles)$/;"	F
handles	test/analysis-guess-interval.test.js	/^      handles: [$/;"	P
handles	test/analysis-guess-interval.test.js	/^      handles: [13, 13, 13, 13, 13, 3, 3, 3, 3, 3, 3, 3]$/;"	P
handles	test/analysis-guess-interval.test.js	/^      handles: [3, 3, 3, 3, 3, 13, 13, 13, 13, 13, 13, 13, 3, 3, 3]$/;"	P
handles	test/analysis-guess-interval.test.js	/^      handles: [3, 3, 3, 3, 3, 13, 13, 13, 13, 13, 13, 13]$/;"	P
handles	test/analysis-guess-interval.test.js	/^      handles: [3, 3, 3, 3, 3, 13, 13, 13, 3, 3, 3]$/;"	P
handles	test/analysis-guess-interval.test.js	/^    handles: [3, 3, 3, 3, 3, 3, 3, 3]$/;"	P
handles	test/analysis-handles.test.js	/^      handles: [$/;"	P
handles	test/analysis-handles.test.js	/^      handles: [100, 100, 120, 90, 110, 100, 80, 110, 90, 110]$/;"	P
handles	test/analysis-handles.test.js	/^    handles: [$/;"	P
handles	test/analysis-handles.test.js	/^    handles: [100, 100, 100, 100, 100, 100, 100, 100, 100, 100]$/;"	P
handles	test/analysis-handles.test.js	/^    handles: [100]$/;"	P
handles	test/analysis.test.js	/^      handles: [3, 3, 3, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 3, 3, 3],$/;"	P
handles	test/analysis.test.js	/^    handles: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3],$/;"	P
has	visualizer/sub-graph.js	/^function has (object, property) {$/;"	F
hasDataIssue	analysis/issue-category.js	/^      hasDataIssue(issues.handles) || hasDataIssue(issues.delay)) {$/;"	M
hasDataIssue	analysis/issue-category.js	/^function hasDataIssue (issue) {$/;"	F
hasFreeMemory	index.js	/^    const hasFreeMemory = () => {$/;"	F
hasPerformanceIssue	analysis/issue-category.js	/^function hasPerformanceIssue (issue) {$/;"	F
headerHeight	visualizer/sub-graph.js	/^const headerHeight = 18$/;"	V
headerLogo	index.js	/^      headerLogo: logoFile,$/;"	P
heapTotal	test/cmd-visualize.test.js	/^      heapTotal: HEAP_MAX,$/;"	P
heapUsed	test/cmd-visualize.test.js	/^      heapUsed: 0,$/;"	P
hmm	analysis/analyse-cpu.js	/^  const hmm = new HMM({$/;"	V
hrtime	test/format-system-info.test.js	/^        hrtime: [0, 400000],$/;"	P
hrtime	test/format-system-info.test.js	/^      hrtime: [0, 400000],$/;"	P
hrtime	test/format-trace-event.test.js	/^      hrtime: [0, 400000],$/;"	P
hrtime2ms	collect/process-stat.js	/^function hrtime2ms (time) {$/;"	F
icons	visualizer/icons.js	/^    const icons = {$/;"	O
ignoreInitial	debug/visualize-watch.js	/^    ignoreInitial: true$/;"	P
inputSamples	test/format-process-stat.test.js	/^  const inputSamples = []$/;"	A
interval	analysis/index.js	/^      interval: [-Infinity, Infinity],$/;"	P
interval	analysis/index.js	/^      interval: intervalTime,$/;"	P
interval	test/analysis.test.js	/^      interval: [300, 1200],$/;"	P
interval	test/analysis.test.js	/^    interval: [-Infinity, Infinity],$/;"	P
interval	test/analysis.test.js	/^    interval: [0, 900],$/;"	P
intervalTime	analysis/index.js	/^  const intervalTime = [$/;"	A
isBreak	test/generate-trace-event.js	/^function isBreak (type) {$/;"	F
isGCEvent	test/generate-trace-event.js	/^function isGCEvent (type) {$/;"	F
issue	recommendations/index.js	/^    issue: false,$/;"	P
issue	recommendations/index.js	/^    issue: true,$/;"	P
issueCategory	analysis/index.js	/^      issueCategory: category$/;"	P
issueCategory	analysis/issue-category.js	/^function issueCategory (issues) {$/;"	F
issues	analysis/index.js	/^      issues: issues,$/;"	P
issues	analysis/index.js	/^      issues: {$/;"	P
issues	analysis/index.js	/^    const issues = {$/;"	O
issues	test/analysis-issue-category.test.js	/^    const issues = {$/;"	O
issues	test/analysis.test.js	/^      issues: {$/;"	P
issues	test/analysis.test.js	/^    issues: {$/;"	P
issuesAsData	visualizer/alert.js	/^    const issuesAsData = [$/;"	A
lastType	test/generate-trace-event.js	/^  let lastType = 0$/;"	V
left	analysis/guess-interval.js	/^  const left = new OnlineMeanVariance()$/;"	V
legendHeight	visualizer/hover-box.js	/^      legendHeight: 28,$/;"	P
lineStyle	visualizer/graph.js	/^        lineStyle: [''],$/;"	P
lineStyle	visualizer/graph.js	/^      lineStyle: [''],$/;"	P
lineStyle	visualizer/graph.js	/^      lineStyle: ['1, 2', '5, 3', ''],$/;"	P
lineWidth	visualizer/hover-box.js	/^      lineWidth: 1,$/;"	P
loaddata	visualizer/data.js	/^function loaddata (callback) {$/;"	F
loaddata	visualizer/main.js	/^  loaddata(function maybeDone (err, data) {$/;"	M
logArgs	index.js	/^    const logArgs = [$/;"	A
longLegend	visualizer/graph.js	/^      longLegend: ['RSS', 'Total Heap Allocated', 'Heap Used'],$/;"	P
loopUtilization	test/analysis-utilization.test.js	/^      loopUtilization: [100, 100, 100, 95, 98, 96, 94]$/;"	P
loopUtilization	test/analysis-utilization.test.js	/^      loopUtilization: [70, 70, 70, 70, 70, 75, 79, 80]$/;"	P
loopUtilization	test/analysis-utilization.test.js	/^    loopUtilization: [100, 60, 100, 98, 70, 100, 98, 100]$/;"	P
loopUtilization	test/analysis-utilization.test.js	/^    loopUtilization: [70, 20, 70, 60, 70, 80, 70, 180]$/;"	P
margin	visualizer/sub-graph.js	/^const margin = { top: 20, right: 20, bottom: 30, left: 50 }$/;"	O
marginBottom	visualizer/hover-box.js	/^      marginBottom: 3,$/;"	P
marginTop	visualizer/hover-box.js	/^      marginTop: 3,$/;"	P
maxBlockedTime	analysis/analyse-memory.js	/^function maxBlockedTime (timeWindowData) {$/;"	F
md	recommendations/index.js	/^const md = new Showdown.Converter({$/;"	V
medianAbsoluteDeviation	analysis/analyse-handles.js	/^  const medianAbsoluteDeviation = summary(handles.map((x) => Math.abs(x - median))).mean()$/;"	F
memory	analysis/index.js	/^        memory: {$/;"	P
memory	test/analysis-issue-category.test.js	/^      memory: {$/;"	P
memory	test/analysis.test.js	/^        memory: {$/;"	P
memory	test/analysis.test.js	/^      memory: {$/;"	P
memory	test/format-process-stat.test.js	/^      memory: {$/;"	P
memory	test/generate-process-stat.js	/^      memory: {$/;"	P
memoryDataIssue	analysis/issue-category.js	/^  const memoryDataIssue = ($/;"	F
memoryPerformanceIssue	analysis/issue-category.js	/^  const memoryPerformanceIssue = ($/;"	F
memoryUsage	test/cmd-visualize.test.js	/^  process.memoryUsage = () => {$/;"	M
middle	analysis/guess-interval.js	/^  const middle = new OnlineMeanVariance()$/;"	V
mindiff	analysis/guess-interval.js	/^  const mindiff = 1$/;"	V
miraAlpha	analysis/analyse-handles.js	/^  const miraAlpha = 1e-10 \/\/ risk acceptance$/;"	V
miraSkewnessTest	analysis/analyse-handles.js	/^function miraSkewnessTest (handleStat, handles) {$/;"	F
ms	test/collect-process-stat.test.js	/^function ms (now) {$/;"	F
name	test/generate-trace-event.js	/^        name: lastType,$/;"	P
noHeaderId	recommendations/index.js	/^  noHeaderId: true,$/;"	P
noise	test/generate-process-stat.js	/^  function noise () {$/;"	F
nonzero	analysis/analyse-handles.js	/^function nonzero (vec) {$/;"	F
normal	analysis/analyse-handles.js	/^  const normal = new distributions.Normal()$/;"	V
numLines	visualizer/graph.js	/^        numLines: 1,$/;"	P
numLines	visualizer/graph.js	/^      numLines: 1,$/;"	P
numLines	visualizer/graph.js	/^      numLines: 3,$/;"	P
onlisten	injects/detect-port.js	/^onlisten(function (addr) {$/;"	M
onrequest	test/cmd-collect-detect-port.test.js	/^    function onrequest (req, res) {$/;"	F
options	index.js	/^    const options = { identifier: this.name || proc.pid, path: this.path }$/;"	O
order	recommendations/index.js	/^    order: 1,$/;"	P
order	recommendations/index.js	/^    order: 2,$/;"	P
order	recommendations/index.js	/^    order: 3,$/;"	P
order	recommendations/index.js	/^    order: 4,$/;"	P
order	recommendations/index.js	/^    order: 5,$/;"	P
order	recommendations/index.js	/^    order: 6,$/;"	P
output	test/cmd-collect-sample-interval.test.js	/^  const output = []$/;"	A
output	test/cmd-collect.test.js	/^  const output = []$/;"	A
output	test/generate-process-stat.js	/^  const output = []$/;"	A
output	test/generate-trace-event.js	/^  const output = []$/;"	A
performanceIssue	analysis/analyse-cpu.js	/^function performanceIssue (issue) {$/;"	F
performanceIssue	analysis/analyse-delay.js	/^function performanceIssue (issue) {$/;"	F
performanceIssue	analysis/analyse-handles.js	/^function performanceIssue (issue) {$/;"	F
performanceIssue	analysis/analyse-loop-utilization.js	/^function performanceIssue (issue) {$/;"	F
performanceIssue	analysis/analyse-memory.js	/^function performanceIssue (issue) {$/;"	F
pid	test/analysis-memory.test.js	/^      pid: 0,$/;"	P
pid	test/format-trace-event.test.js	/^        pid: 10,$/;"	P
pid	test/generate-trace-event.js	/^        pid: 0,$/;"	P
pointHeight	visualizer/hover-box.js	/^      pointHeight: 10,$/;"	P
processStat	injects/sampler.js	/^const processStat = new ProcessStat($/;"	V
processStatEncoder	injects/sampler.js	/^const processStatEncoder = new ProcessStatEncoder()$/;"	V
pvalue	analysis/analyse-handles.js	/^  const pvalue = 2 * (1 - normal.cdf(Math.abs(Z)))$/;"	V
queryParser	test/analysis-issue-category.test.js	/^  const queryParser = new RegExp([$/;"	V
readFile	test/recommendation.test.js	/^    fs.readFile = function (filepath, encoding, callback) {$/;"	M
readMore	recommendations/index.js	/^    readMore: null$/;"	P
readableObjectMode	debug/process-stat-to-csv.js	/^      readableObjectMode: false,$/;"	P
readableObjectMode	debug/trace-event-to-csv.js	/^      readableObjectMode: false,$/;"	P
readableObjectMode	format/abstract-decoder.js	/^      readableObjectMode: true,$/;"	P
readableObjectMode	format/abstract-encoder.js	/^      readableObjectMode: false,$/;"	P
readableObjectMode	format/system-info-decoder.js	/^      readableObjectMode: true,$/;"	P
readableObjectMode	format/trace-event-decoder.js	/^      readableObjectMode: true,$/;"	P
readableObjectMode	index.js	/^        readableObjectMode: false,$/;"	P
recommendations	index.js	/^    const recommendations = new RenderRecommendations()$/;"	V
recommendations	recommendations/index.js	/^const recommendations = [$/;"	A
right	analysis/guess-interval.js	/^  const right = new OnlineMeanVariance()$/;"	V
rng	test/generate-process-stat.js	/^  const rng = new xorshift.constructor([$/;"	V
rss	test/cmd-visualize.test.js	/^      rss: 0,$/;"	P
s	injects/detect-port.js	/^  const s = new net.Socket({ fd, readable: true, writable: false })$/;"	V
sampleInterval	test/cmd-collect-sample-interval.test.js	/^    sampleInterval: 100$/;"	P
sampleInterval	test/cmd-collect.test.js	/^    sampleInterval: 100$/;"	P
sampleTimes	test/cmd-collect-sample-interval.test.js	/^      const sampleTimes = output.processStat.map((stat) => stat.timestamp)$/;"	F
sampleTimes	test/cmd-collect.test.js	/^      const sampleTimes = output.processStat.map((stat) => stat.timestamp)$/;"	F
sanitizeIcon	visualizer/icons.js	/^const sanitizeIcon = icon =>$/;"	F
saveSample	injects/sampler.js	/^function saveSample () {$/;"	F
scheduleSample	injects/sampler.js	/^function scheduleSample () {$/;"	F
script	index.js	/^      script: scriptFile,$/;"	P
seed	analysis/analyse-cpu.js	/^    seed: HHM_SEED$/;"	P
setTimeout	test/cmd-collect.test.js	/^    setTimeout(function () {$/;"	M
setTimeout	test/collect-process-stat.test.js	/^  setTimeout(function () {$/;"	M
setTimeout	visualizer/data.js	/^  setTimeout(function () {$/;"	M
shortLegend	visualizer/graph.js	/^        shortLegend: ['ELU'],$/;"	P
shortLegend	visualizer/graph.js	/^      shortLegend: ['Delay'],$/;"	P
shortLegend	visualizer/graph.js	/^      shortLegend: ['Handles'],$/;"	P
shortLegend	visualizer/graph.js	/^      shortLegend: ['RSS', 'THA', 'HU'],$/;"	P
shortLegend	visualizer/graph.js	/^      shortLegend: ['Usage'],$/;"	P
shortToLong	test/analysis-issue-category.test.js	/^  const shortToLong = {$/;"	O
showLegend	visualizer/graph.js	/^        showLegend: false,$/;"	P
showLegend	visualizer/graph.js	/^      showLegend: false,$/;"	P
showLegend	visualizer/graph.js	/^      showLegend: true,$/;"	P
sign	analysis/analyse-handles.js	/^function sign (vec) {$/;"	F
signAlpha	analysis/analyse-handles.js	/^  const signAlpha = 1e-7 \/\/ risk acceptance$/;"	V
signal	injects/detect-port.js	/^  signal(3, function () {$/;"	M
signal	injects/detect-port.js	/^function signal (fd, cb) {$/;"	F
simpleLineBreaks	recommendations/index.js	/^  simpleLineBreaks: false$/;"	P
simplifiedAutoLink	recommendations/index.js	/^  simplifiedAutoLink: true,$/;"	P
size	visualizer/hover-box.js	/^    this.size = {$/;"	P
sleep	test/collect-process-stat.test.js	/^function sleep (time) {$/;"	F
startIndex	visualizer/data.js	/^  let startIndex = 0$/;"	V
startTimestamp	format/trace-event-decoder.js	/^      startTimestamp: (traceEvent.ts * 1e-3) + this.clockOffset,$/;"	M
startTimestamp	test/generate-trace-event.js	/^          startTimestamp: startTimestamp,$/;"	P
startTimestamp	test/generate-trace-event.js	/^  let startTimestamp = 0$/;"	V
stat	test/collect-process-stat.test.js	/^  const stat = new ProcessStat(1, collectLoopUtilization)$/;"	V
stat	test/collect-process-stat.test.js	/^  const stat = new ProcessStat(10, collectLoopUtilization)$/;"	V
stat	test/format-process-stat.test.js	/^  const stat = new ProcessStat(1, collectLoopUtilization)$/;"	V
state	analysis/analyse-cpu.js	/^  const state = await tf.tidy(() => tf.squeeze(hmm.inference(data))).data()$/;"	F
states	analysis/analyse-cpu.js	/^    states: 2,$/;"	P
statisticallyLessThan	analysis/guess-interval.js	/^          statisticallyLessThan(right, middle)) {$/;"	M
statisticallyLessThan	analysis/guess-interval.js	/^function statisticallyLessThan (leftSide, rightSide) {$/;"	F
stats	analysis/analyse-delay.js	/^  const stats = summary(processStatSubset.map((d) => d.delay))$/;"	F
stats	analysis/analyse-loop-utilization.js	/^  const stats = summary(processStatSubset.map((d) => d.loopUtilization))$/;"	F
stdio	index.js	/^    const stdio = ['inherit', 'inherit', 'inherit']$/;"	A
strikethrough	recommendations/index.js	/^  strikethrough: true,$/;"	P
styles	index.js	/^      styles: styleFile,$/;"	P
subgraphs	visualizer/graph.js	/^    const subgraphs = [this.cpu, this.memory, this.delay, this.handles]$/;"	A
subsetData	analysis/index.js	/^function subsetData (traceEvent, processStat, intervalIndex, intervalTime) {$/;"	F
summaryApplication	analysis/analyse-cpu.js	/^  const summaryApplication = ($/;"	F
systemInfo	collect/system-info.js	/^function systemInfo () {$/;"	F
systemInfoReader	test/format-system-info.test.js	/^  const systemInfoReader = new SystemInfoDecoder()$/;"	V
systemInfoReader	test/format-trace-event.test.js	/^  const systemInfoReader = new SystemInfoDecoder()$/;"	V
t	test/cmd-collect.test.js	/^    const t = [];$/;"	A
tables	recommendations/index.js	/^  tables: true,$/;"	P
test	test/analysis-cpu.test.js	/^test('analyse cpu - little data', async function (t) {$/;"	M
test	test/analysis-cpu.test.js	/^test('analyse cpu - one mode', async function (t) {$/;"	M
test	test/analysis-cpu.test.js	/^test('analyse cpu - small cluster data', async function (t) {$/;"	M
test	test/analysis-cpu.test.js	/^test('analyse cpu - two mode - opposite clusters', async function (t) {$/;"	M
test	test/analysis-cpu.test.js	/^test('analyse cpu - two mode', async function (t) {$/;"	M
test	test/analysis-delay.test.js	/^test('analyse delay - spikes', function (t) {$/;"	M
test	test/analysis-delay.test.js	/^test('analyse delay - to high', function (t) {$/;"	M
test	test/analysis-guess-interval.test.js	/^test('guess interval - expected data', function (t) {$/;"	M
test	test/analysis-guess-interval.test.js	/^test('guess interval - flat data', function (t) {$/;"	M
test	test/analysis-guess-interval.test.js	/^test('guess interval - missing left tail', function (t) {$/;"	M
test	test/analysis-guess-interval.test.js	/^test('guess interval - missing right tail', function (t) {$/;"	M
test	test/analysis-guess-interval.test.js	/^test('guess interval - overtrim is not possible', function (t) {$/;"	M
test	test/analysis-guess-interval.test.js	/^test('guess interval - trims 100 ms from left and right side', function (t) {$/;"	M
test	test/analysis-handles.test.js	/^test('analyse handles - almost constant', function (t) {$/;"	M
test	test/analysis-handles.test.js	/^test('analyse handles - flat', function (t) {$/;"	M
test	test/analysis-handles.test.js	/^test('analyse handles - increasing data', function (t) {$/;"	M
test	test/analysis-handles.test.js	/^test('analyse handles - no data', function (t) {$/;"	M
test	test/analysis-handles.test.js	/^test('analyse handles - sawtooth data', function (t) {$/;"	M
test	test/analysis-handles.test.js	/^test('analyse handles - symetric data', function (t) {$/;"	M
test	test/analysis-issue-category.test.js	/^test('Analysis - issue category', function (t) {$/;"	M
test	test/analysis-memory.test.js	/^test('analyse memory - genereate trace event', function (t) {$/;"	M
test	test/analysis-memory.test.js	/^test('analyse memory - issue old space', function (t) {$/;"	M
test	test/analysis-memory.test.js	/^test('analyse memory - issue with new space', function (t) {$/;"	M
test	test/analysis-memory.test.js	/^test('analyse memory - no data', function (t) {$/;"	M
test	test/analysis-memory.test.js	/^test('analyse memory - no issues', function (t) {$/;"	M
test	test/analysis-memory.test.js	/^test('analyse memory - only old node version has issue', function (t) {$/;"	M
test	test/analysis-utilization.test.js	/^test('analyse event loop utilization - low and high', function (t) {$/;"	M
test	test/analysis-utilization.test.js	/^test('analyse event loop utilization - spikes', function (t) {$/;"	M
test	test/analysis.test.js	/^test('Analysis - pipeline - error', async function (t) {$/;"	M
test	test/analysis.test.js	/^test('Analysis - pipeline - full interval', async function (t) {$/;"	M
test	test/analysis.test.js	/^test('Analysis - pipeline - no data', async function (t) {$/;"	M
test	test/analysis.test.js	/^test('Analysis - pipeline - normal interval', async function (t) {$/;"	M
test	test/cmd-collect-analysing.test.js	/^test('cmd - test ELU is not calculated with unsupported node versions', function (t) {$/;"	M
test	test/cmd-collect-analysing.test.js	/^test('cmd - test collect - emits "analysing" event', function (t) {$/;"	M
test	test/cmd-collect-detect-port.test.js	/^test('cmd - collect - detect server port and cb', function (t) {$/;"	M
test	test/cmd-collect-detect-port.test.js	/^test('cmd - collect - detect server port', function (t) {$/;"	M
test	test/cmd-collect-exit.test.js	/^test('cmd - collect - SIGKILL causes error', { skip }, function (t) {$/;"	M
test	test/cmd-collect-exit.test.js	/^test('cmd - collect - external SIGINT is relayed', { skip }, function (t) {$/;"	M
test	test/cmd-collect-exit.test.js	/^test('cmd - collect - non-success exit code should not throw', function (t) {$/;"	M
test	test/cmd-collect-node-options-env.test.js	/^test('cmd - collect - NODE_OPTIONS environment is not ignored', function (t) {$/;"	M
test	test/cmd-collect-node-path-env.test.js	/^test('cmd - collect - NODE_PATH works', function (t) {$/;"	M
test	test/cmd-collect-sample-interval.test.js	/^test('cmd - collect - custom sample interval', function (t) {$/;"	M
test	test/cmd-collect.test.js	/^test('cmd - collect - data files have content', function (t) {$/;"	M
test	test/cmd-collect.test.js	/^test('cmd - collect - gc events', function (t) {$/;"	M
test	test/cmd-collect.test.js	/^test('cmd - collect - startup delay is not included', function (t) {$/;"	M
test	test/cmd-no-cluster.test.js	/^test('cmd - collect - cluster required but not used is ok', function (t) {$/;"	M
test	test/cmd-no-cluster.test.js	/^test('cmd - collect - using cluster causes error', function (t) {$/;"	M
test	test/cmd-visualize.test.js	/^test('cmd - test visualization - data exists', function (t) {$/;"	M
test	test/cmd-visualize.test.js	/^test('cmd - test visualization - memory exhausted', function (t) {$/;"	M
test	test/cmd-visualize.test.js	/^test('cmd - test visualization - missing data', function (t) {$/;"	M
test	test/collect-get-logging-paths.test.js	/^test('Collect - logging path - bad type', function (t) {$/;"	M
test	test/collect-get-logging-paths.test.js	/^test('Collect - logging path - identifier', function (t) {$/;"	M
test	test/collect-get-logging-paths.test.js	/^test('Collect - logging path - null path and identifier', function (t) {$/;"	M
test	test/collect-get-logging-paths.test.js	/^test('Collect - logging path - path and identifier', function (t) {$/;"	M
test	test/collect-get-logging-paths.test.js	/^test('Collect - logging path - path', function (t) {$/;"	M
test	test/collect-get-logging-paths.test.js	/^test('Collect - logging testing null values', function (t) {$/;"	M
test	test/collect-process-stat.test.js	/^test('Collect - process stat - cpu usage', function (t) {$/;"	M
test	test/collect-process-stat.test.js	/^test('Collect - process stat - delay usage', function (t) {$/;"	M
test	test/collect-process-stat.test.js	/^test('Collect - process stat - input validation - collectLoopUtilization', function (t) {$/;"	M
test	test/collect-process-stat.test.js	/^test('Collect - process stat - input validation - sampleInterval', function (t) {$/;"	M
test	test/collect-process-stat.test.js	/^test('Collect - process stat - memory usage', function (t) {$/;"	M
test	test/collect-process-stat.test.js	/^test('Collect - process stat - number of handles', function (t) {$/;"	M
test	test/collect-process-stat.test.js	/^test('Collect - process stat - timestamp', function (t) {$/;"	M
test	test/collect-system-info.test.js	/^test('Collect - system info - check data', function (t) {$/;"	M
test	test/format-process-stat.test.js	/^test('Format - process stat - encoder-decoder', function (t) {$/;"	M
test	test/format-process-stat.test.js	/^test('Format - process stat - partial decoding', function (t) {$/;"	M
test	test/format-system-info.test.js	/^test('Format - system info - decoding', function (t) {$/;"	M
test	test/format-trace-event.test.js	/^test('Format - trace event - combine', function (t) {$/;"	M
test	test/format-trace-event.test.js	/^test('Format - trace event - error', function (t) {$/;"	M
test	test/lib-destroyable-stream.test.js	/^test('Destroyable streams', function (t) {$/;"	M
test	test/recommendation.test.js	/^test('Recommendation - contains all categories', function (t) {$/;"	M
test	test/recommendation.test.js	/^test('Recommendation - read failure', function (t) {$/;"	M
testQueries	test/analysis-issue-category.test.js	/^  const testQueries = [$/;"	A
testStream	test/lib-destroyable-stream.test.js	/^  function testStream (s, shouldError) {$/;"	F
thisSample	collect/process-stat.js	/^    const thisSample = {$/;"	O
tid	test/analysis-memory.test.js	/^      tid: 0,$/;"	P
tid	test/format-trace-event.test.js	/^        tid: 1,$/;"	P
tid	test/generate-trace-event.js	/^        tid: 0,$/;"	P
timeOffset	test/format-trace-event.test.js	/^  const timeOffset = 33000000$/;"	V
timeWindowData	analysis/analyse-memory.js	/^  const timeWindowData = []$/;"	A
timeWindows	analysis/analyse-memory.js	/^  const timeWindows = gcevents.map((d) => d.timeWindow)$/;"	F
timestamps	analysis/guess-interval.js	/^  const timestamps = data.map((d) => d.timestamp)$/;"	F
titleHeight	visualizer/hover-box.js	/^      titleHeight: 36,$/;"	P
titlePaddingTop	visualizer/hover-box.js	/^      titlePaddingTop: 5,$/;"	P
tool	debug/visualize-mod.js	/^      const tool = new Tool({ debug: true })$/;"	V
tool	test/cmd-collect-analysing.test.js	/^  const tool = new ClinicDoctor()$/;"	V
tool	test/cmd-visualize.test.js	/^  const tool = new ClinicDoctor()$/;"	V
tool	test/cmd-visualize.test.js	/^  const tool = new ClinicDoctor({ debug: true })$/;"	V
tool	test/cmd-visualize.test.js	/^  const tool = new ClinicDoctor({ dest: '.\/foo' })$/;"	V
toolVersion	index.js	/^      toolVersion: doctorVersion,$/;"	P
tooltipLegend	visualizer/graph.js	/^      tooltipLegend: [$/;"	P
traceEvent	test/format-trace-event.test.js	/^function traceEvent (data) {$/;"	F
traceEventSubset	analysis/index.js	/^  const traceEventSubset = []$/;"	A
traceEvents	test/format-trace-event.test.js	/^    traceEvents: []$/;"	P
traceEvents	test/format-trace-event.test.js	/^    traceEvents: data$/;"	P
traceLogs	index.js	/^  const traceLogs = files.filter((file) => {$/;"	F
trim	debug/visualize-mod.js	/^function trim (file) {$/;"	F
trimTime	analysis/guess-interval.js	/^const trimTime = 100 \/\/ ms$/;"	V
ts	test/analysis-memory.test.js	/^      ts: 0,$/;"	P
ts	test/analysis-memory.test.js	/^      ts: 300000,$/;"	P
ts	test/analysis-memory.test.js	/^      ts: 350000,$/;"	P
ts	test/analysis-memory.test.js	/^      ts: 360000,$/;"	P
ts	test/format-trace-event.test.js	/^        ts: 1400,$/;"	P
ts	test/format-trace-event.test.js	/^        ts: 2400,$/;"	P
ts	test/format-trace-event.test.js	/^        ts: 3400,$/;"	P
ts	test/format-trace-event.test.js	/^        ts: 4400,$/;"	P
ts	test/format-trace-event.test.js	/^        ts: 5400,$/;"	P
ts	test/format-trace-event.test.js	/^        ts: 7400,$/;"	P
ts	test/format-trace-event.test.js	/^        ts: 8400,$/;"	P
typeMap	test/generate-trace-event.js	/^const typeMap = new Map([$/;"	V
unixtime	test/format-system-info.test.js	/^        unixtime: 33000000$/;"	P
unixtime	test/format-system-info.test.js	/^      unixtime: 33000000$/;"	P
unixtime	test/format-trace-event.test.js	/^      unixtime: timeOffset$/;"	P
varianceBias	analysis/guess-interval.js	/^const varianceBias = 0.25 \/\/ (1\/2)**2$/;"	V
visualize	debug/visualize-mod.js	/^  visualize: () => {$/;"	M
whiteNoiseSignTest	analysis/analyse-handles.js	/^function whiteNoiseSignTest (noise) {$/;"	F
wrapData	visualizer/data.js	/^function wrapData (data) {$/;"	F
wrapper	visualizer/recommendation.js	/^      const wrapper = new RecomendationWrapper(categoryContent)$/;"	V
writableObjectMode	debug/process-stat-to-csv.js	/^      writableObjectMode: true$/;"	P
writableObjectMode	debug/trace-event-to-csv.js	/^      writableObjectMode: true$/;"	P
writableObjectMode	format/abstract-decoder.js	/^      writableObjectMode: false$/;"	P
writableObjectMode	format/abstract-encoder.js	/^      writableObjectMode: true$/;"	P
writableObjectMode	format/system-info-decoder.js	/^      writableObjectMode: false$/;"	P
writableObjectMode	format/trace-event-decoder.js	/^      writableObjectMode: false$/;"	P
writableObjectMode	index.js	/^        writableObjectMode: true,$/;"	P
y	visualizer/data.js	/^      y: [$/;"	P
y	visualizer/data.js	/^      y: [point.cpu * 100]$/;"	P
y	visualizer/data.js	/^      y: [point.delay]$/;"	P
y	visualizer/data.js	/^      y: [point.handles]$/;"	P
y	visualizer/data.js	/^      y: [point.loopUtilization]$/;"	P
ymax	visualizer/graph.js	/^        ymax: 100$/;"	P
ymax	visualizer/graph.js	/^      ymax: 100$/;"	P
ymin	visualizer/graph.js	/^        ymin: 0,$/;"	P
ymin	visualizer/graph.js	/^      ymin: 0$/;"	P
ymin	visualizer/graph.js	/^      ymin: 0,$/;"	P
